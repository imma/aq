#!/usr/bin/env bash

function resources {
  echo \
    instances images vpcs subnets network-acls internet-gateways \
    route-tables addresses security-groups tags volumes snapshots key-pairs \
    load-balancers launch-configurations auto-scaling-groups iam-users \
    iam-groups iam-roles iam-policies iam-account-aliases iam-instance-profiles \
    iam-server-certificates iam-users iam-virtual-mfa-devices s3-buckets sns-topics \
    sns-subscriptions sqs-queues vpc-endpoint-services vpc-endpoints \
    vpc-peering-connections vpn-connections vpn-gateways route53-hosted-zones \
    volume-status instance-status

}

function cmd_aws {
  local nm_resource="$1"; shift

  echo "aws $@" 1>&2
  aws "$@" | jq -S .
}

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"

  if [[ "$#" == 0 ]]; then
    set -- $(resources)
    echo "$@" | runmany "$BASH_SOURCE"' $1'
    return $?
  fi

  case "${1:-}" in
    list)
      for a in $(resources); do
        echo "$a" 2>&1
      done
      return
      ;;
  esac

  local nm_resource
  for nm_resource in "$@"; do
    case "$nm_resource" in
      instances)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      instance-status)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      images)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" --owners self ;;
      vpcs)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      subnets)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      network-acls)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      internet-gateways)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      route-tables)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      addresses)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      security-groups)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      tags)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      volumes)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      volume-status)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      snapshots)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" --owner-ids self ;;
      key-pairs)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      load-balancers)
        cmd_aws "$nm_resource" elb "describe-${nm_resource}" ;;
      launch-configurations)
        cmd_aws "$nm_resource" autoscaling "describe-${nm_resource}" ;;
      auto-scaling-groups)
        cmd_aws "$nm_resource" autoscaling "describe-${nm_resource}" ;;
      iam-users)
        cmd_aws "$nm_resource" iam "${nm_resource/iam-/list-}" ;;
      iam-groups)
        cmd_aws "$nm_resource" iam "${nm_resource/iam-/list-}" ;;
      iam-roles)
        cmd_aws "$nm_resource" iam "${nm_resource/iam-/list-}" ;;
      iam-policies)
        cmd_aws "$nm_resource" iam "${nm_resource/iam-/list-}" --scope Local ;;
      iam-account-aliases)
        cmd_aws "$nm_resource" iam "${nm_resource/iam-/list-}" ;;
      iam-instance-profiles)
        cmd_aws "$nm_resource" iam "${nm_resource/iam-/list-}" ;;
      iam-server-certificates)
        cmd_aws "$nm_resource" iam "${nm_resource/iam-/list-}" ;;
      iam-virtual-mfa-devices)
        cmd_aws "$nm_resource" iam "${nm_resource/iam-/list-}" ;;
      s3-buckets)
        cmd_aws "$nm_resource" s3api "${nm_resource/s3-/list-}" ;;
			sns-topics)
				cmd_aws "$nm_resource" sns "${nm_resource/sns-/list-}";;
			sns-subscriptions)
				cmd_aws "$nm_resource" sns "${nm_resource/sns-/list-}" ;;
			sqs-queues)
				cmd_aws "$nm_resource" sqs "${nm_resource/sqs-/list-}" ;;
      vpc-endpoint-services)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      vpc-endpoints)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      vpc-peering-connections)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      vpn-connections)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      vpn-gateways)
        cmd_aws "$nm_resource" ec2 "describe-${nm_resource}" ;;
      route53-hosted-zones)
        cmd_aws "$nm_resource" route53 "${nm_resource/route53-/list-}" ;;
    esac

  done
}

source sub "$BASH_SOURCE" "$@"
